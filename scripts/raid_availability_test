#!/usr/bin/env python3
"""
Copyright (C) 2010-2013 by Cloud Computing Center for Mobile Applications
Industrial Technology Research Institute

It is NOT YET officially approved by OCP.

raid_availability_test
  Test Read/Write file correctly on RAID.

Authors
  Nelson Chu <Nelson.Chu@itri.org.tw>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License version 3,
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""

import os
import sys
import xml.etree.ElementTree as ET
from subprocess import check_output, Popen, PIPE

def main():
    current_directory = os.getcwd()
    working_directory = os.path.dirname(os.path.abspath(__file__))
    return_code = 0

    command = "lsscsi |grep -i lsi | awk -F ' ' '{print $6}'"
    with open(os.devnull, "w") as NULL:
      device = check_output(command, stderr=NULL, shell=True)

    device = device.decode('utf-8')

    if not device:
        print("Cannot find any RAID volume.")
        return 10

    # Test read/write file on RAID device.
    command = '{0}/read_write_file -d {1}'.format(working_directory,
                                                  device)
    proc = Popen(command, stdout=PIPE, stderr=PIPE, shell=True)
    try:
        outs = proc.communicate()[1]
        return_code = proc.returncode
        print(outs.decode('utf-8'))
    except Exception as e:
        return 20

    return return_code

if __name__ == '__main__':
    sys.exit(main())
